[gd_scene load_steps=26 format=3 uid="uid://b7aq8eamivh18"]

[ext_resource type="Texture2D" uid="uid://cojytxmrjmf8h" path="res://assets/Grass.png" id="1_w3kmo"]
[ext_resource type="Texture2D" uid="uid://cc2v6mkvtdqke" path="res://assets/golemTilesheet.png" id="2_erad4"]

[sub_resource type="AtlasTexture" id="AtlasTexture_1jgyj"]
atlas = ExtResource("1_w3kmo")
region = Rect2(128, 96, 16, 16)

[sub_resource type="GDScript" id="GDScript_71gmq"]
script/source = "extends Sprite2D

class_name Golem

@onready var tile_map = $\"../TileMap\"
@onready var animated_sprite_2d = $AnimatedSprite2D
@onready var ray_cast_2d = $RayCast2D
@onready var pushable_sprites = get_tree().get_nodes_in_group(\"pushable\")

var is_moving = false
var direction = \"down\"
var is_pulling = false
var pulled_object: Sprite2D = null
var pull_direction: Vector2
var ignore_raycast: bool = false
var golemActivate = true

func _physics_process(delta):
	if global_position == animated_sprite_2d.global_position:
		is_moving = false
		animated_sprite_2d.play(\"idle_\" + direction)
		return
	
	animated_sprite_2d.play(\"walk_\" + direction)
	animated_sprite_2d.global_position = animated_sprite_2d.global_position.move_toward(global_position, 1)

func _process(delta):
	if Input.is_action_just_pressed(\"golemActivate\"):
		parseGolemCommands(\"npepseep\")

func parseGolemCommands(command: String):
	
	# North, East, South West = n, e, s, w
	for char in command:
		var move_direction = Vector2.ZERO
		print(\"Attempting move (\", char, \")...\")
		if is_moving:
			print(\"Cannot move; already in motion\")
			await get_tree().create_timer(1).timeout
			is_moving = false

		if char == \"e\":
			move_direction.x += 1
			if !is_pulling:
				direction = \"right\"
		elif char == \"w\":
			move_direction.x -= 1
			if !is_pulling:
				direction = \"left\"
		elif char == \"s\":
			move_direction.y += 1
			if !is_pulling:
				direction = \"down\"
		elif char == \"n\":
			move_direction.y -= 1
			if !is_pulling:
				direction = \"up\"
		elif char == \"p\":
			toggle_pull()
		
		if move_direction != Vector2.ZERO:
			move(move_direction)

	self.golemActivate = false

func move(move_direction: Vector2):
	var current_tile: Vector2i = tile_map.local_to_map(global_position)
	var target_tile: Vector2i = current_tile + Vector2i(move_direction)
	
	print(\"Current tile: \", current_tile)
	print(\"Direction: \", self.direction)
	
	ray_cast_2d.target_position = move_direction * 16
	ray_cast_2d.force_raycast_update()
	
	if not is_pulling:
		for pushable in pushable_sprites:
			pushable.check_push(global_position, move_direction)
	
	if ray_cast_2d.is_colliding():
		toggle_pull()
		return
	
	if is_pulling and pulled_object:
		#pull_direction = move_direction  # Update pull direction
		var pull_target = tile_map.map_to_local(tile_map.local_to_map(pulled_object.global_position) + Vector2i(move_direction))
		if move_direction == -pull_direction:
			ignore_raycast = true
			pulled_object.move_to(pull_target, ignore_raycast)
		else:
			ignore_raycast= false
			pulled_object.move_to(pull_target, ignore_raycast)
		
	is_moving = true
	global_position = tile_map.map_to_local(target_tile)
	animated_sprite_2d.global_position = tile_map.map_to_local(current_tile)
	# If pulled_object and player are not adjacent toggle_pull
	if is_pulling:
		var dx = abs(pulled_object.global_position.x - global_position.x)
		var dy = abs(pulled_object.global_position.y - global_position.y)
		prints(\"dx:\", dx)
		prints(\"dy:\", dy)
		if (dx >= 16 && dy >= 16):
			print(\"object no longer adjacent\")
			toggle_pull()
	

func toggle_pull():
	if is_pulling:
		is_pulling = false
		print(\"not pulling\")
		pulled_object = null
		pull_direction = Vector2.ZERO
	else:
		var direction_vector = get_direction_vector()
		var facing_tile = tile_map.local_to_map(global_position) + Vector2i(direction_vector)
		for pushable in pushable_sprites:
			if tile_map.local_to_map(pushable.global_position) == facing_tile:
				is_pulling = true
				print(\"pulling\")
				pulled_object = pushable
				pull_direction = direction_vector
				break

func get_direction_vector() -> Vector2:
	match direction:
		\"right\":
			return Vector2.RIGHT
		\"left\":
			return Vector2.LEFT
		\"down\":
			return Vector2.DOWN
		\"up\":
			return Vector2.UP
	return Vector2.ZERO
"

[sub_resource type="AtlasTexture" id="AtlasTexture_mwsi5"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_mxnwy"]
atlas = ExtResource("2_erad4")
region = Rect2(16, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_sxn1l"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_po44t"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_10u51"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_i6p3p"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 16, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_bgl0c"]
atlas = ExtResource("2_erad4")
region = Rect2(16, 16, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_g5kf0"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 48, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_dui21"]
atlas = ExtResource("2_erad4")
region = Rect2(16, 48, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_4wtsx"]
atlas = ExtResource("2_erad4")
region = Rect2(0, 0, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_myxem"]
atlas = ExtResource("2_erad4")
region = Rect2(16, 0, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_tim3s"]
atlas = ExtResource("2_erad4")
region = Rect2(32, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_8qcwe"]
atlas = ExtResource("2_erad4")
region = Rect2(48, 32, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_ji4km"]
atlas = ExtResource("2_erad4")
region = Rect2(32, 16, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_eigpt"]
atlas = ExtResource("2_erad4")
region = Rect2(48, 16, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_xccjy"]
atlas = ExtResource("2_erad4")
region = Rect2(32, 48, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_65fuk"]
atlas = ExtResource("2_erad4")
region = Rect2(48, 48, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_ems17"]
atlas = ExtResource("2_erad4")
region = Rect2(32, 0, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_wk4gb"]
atlas = ExtResource("2_erad4")
region = Rect2(48, 0, 16, 16)

[sub_resource type="SpriteFrames" id="SpriteFrames_qc1ik"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_mwsi5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mxnwy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sxn1l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_po44t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_10u51")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mwsi5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mwsi5")
}],
"loop": true,
"name": &"idle_down",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bgl0c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i6p3p")
}],
"loop": true,
"name": &"idle_left",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dui21")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5kf0")
}],
"loop": true,
"name": &"idle_right",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_myxem")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4wtsx")
}],
"loop": true,
"name": &"idle_up",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tim3s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8qcwe")
}],
"loop": true,
"name": &"walk_down",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ji4km")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eigpt")
}],
"loop": true,
"name": &"walk_left",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_xccjy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_65fuk")
}],
"loop": true,
"name": &"walk_right",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ems17")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wk4gb")
}],
"loop": true,
"name": &"walk_up",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_aqun6"]
size = Vector2(16, 16)

[node name="Golem" type="Sprite2D"]
z_index = 1
position = Vector2(16, 16)
texture = SubResource("AtlasTexture_1jgyj")
script = SubResource("GDScript_71gmq")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_qc1ik")
animation = &"walk_up"
autoplay = "idle_down"

[node name="RayCast2D" type="RayCast2D" parent="."]
target_position = Vector2(0, 8)
collide_with_areas = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
z_as_relative = false
shape = SubResource("RectangleShape2D_aqun6")
